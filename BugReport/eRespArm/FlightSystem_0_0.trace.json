[
  {
    "type": "CreateMonitor",
    "details": {
      "log": "DroneModesOfOperation was created.",
      "payload": "null",
      "monitor": "DroneModesOfOperation",
      "clock": {
        "DroneModesOfOperation": 1
      }
    }
  },
  {
    "type": "MonitorStateTransition",
    "details": {
      "log": "DroneModesOfOperation enters state \u0027Init\u0027.",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "monitor": "DroneModesOfOperation",
      "clock": {
        "DroneModesOfOperation": 2
      }
    }
  },
  {
    "type": "CreateMonitor",
    "details": {
      "log": "LivenessMonitor was created.",
      "payload": "null",
      "monitor": "LivenessMonitor",
      "clock": {
        "LivenessMonitor": 1
      }
    }
  },
  {
    "type": "MonitorStateTransition",
    "details": {
      "log": "LivenessMonitor enters state \u0027Init\u0027.",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "monitor": "LivenessMonitor",
      "clock": {
        "LivenessMonitor": 2
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "FailureDroneGPT(2) enters state \u0027Init\u0027.",
      "id": "FailureDroneGPT(2)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "FailureDroneGPT(2)": 1
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "FlightController(3) was created by FailureDroneGPT(2).",
      "id": "FlightController(3)",
      "creatorName": "FailureDroneGPT(2)",
      "creatorType": "FailureDroneGPT",
      "payload": "null",
      "clock": {
        "FlightController(3)": 1
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "FailureInjectorGPT(4) was created by FailureDroneGPT(2).",
      "id": "FailureInjectorGPT(4)",
      "creatorName": "FailureDroneGPT(2)",
      "creatorType": "FailureDroneGPT",
      "payload": "null",
      "clock": {
        "FailureInjectorGPT(4)": 1
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027FailureDroneGPT(2)\u0027 in state \u0027Init\u0027 sent event \u0027eLinkInitialized\u0027 to \u0027FailureInjectorGPT(4)\u0027.",
      "event": "eLinkInitialized",
      "state": "Init",
      "payload": "null",
      "sender": "FailureDroneGPT(2)",
      "target": "FailureInjectorGPT(4)",
      "opGroupId": "00000000-0000-0000-0000-000000000000",
      "isTargetHalted": false,
      "clock": {
        "FailureDroneGPT(2)": 2
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "FailureInjectorGPT(4) enters state \u0027Init\u0027.",
      "id": "FailureInjectorGPT(4)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "FailureInjectorGPT(4)": 2
      }
    }
  },
  {
    "type": "GotoState",
    "details": {
      "log": "FailureInjectorGPT(4) is transitioning from state \u0027Init\u0027 to state \u0027InjectFailures\u0027.",
      "id": "FailureInjectorGPT(4)",
      "startState": "Init",
      "endState": "InjectFailures",
      "payload": "null",
      "clock": {
        "FailureInjectorGPT(4)": 3
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "FailureInjectorGPT(4) exits state \u0027Init\u0027.",
      "id": "FailureInjectorGPT(4)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "FailureInjectorGPT(4)": 4
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "FailureInjectorGPT(4) enters state \u0027InjectFailures\u0027.",
      "id": "FailureInjectorGPT(4)",
      "state": "InjectFailures",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "FailureInjectorGPT(4)": 5
      }
    }
  },
  {
    "type": "SendEvent",
    "details": {
      "log": "\u0027FailureInjectorGPT(4)\u0027 in state \u0027InjectFailures\u0027 sent event \u0027eRespArm with payload (False)\u0027 to \u0027FlightController(3)\u0027.",
      "event": "eRespArm",
      "state": "InjectFailures",
      "payload": false,
      "sender": "FailureInjectorGPT(4)",
      "target": "FlightController(3)",
      "opGroupId": "00000000-0000-0000-0000-000000000000",
      "isTargetHalted": false,
      "clock": {
        "FailureInjectorGPT(4)": 6
      }
    }
  },
  {
    "type": "RaiseEvent",
    "details": {
      "log": "\u0027FailureInjectorGPT(4)\u0027 raised event \u0027PHalt\u0027 in state \u0027InjectFailures\u0027.",
      "id": "FailureInjectorGPT(4)",
      "event": "PHalt",
      "state": "InjectFailures",
      "payload": "null",
      "clock": {
        "FailureInjectorGPT(4)": 7
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "FailureInjectorGPT(4) exits state \u0027InjectFailures\u0027.",
      "id": "FailureInjectorGPT(4)",
      "state": "InjectFailures",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "FailureInjectorGPT(4)": 8
      }
    }
  },
  {
    "type": "PopStateUnhandledEvent",
    "details": {
      "log": "FailureInjectorGPT(4) popped state InjectFailures due to unhandled event \u0027PHalt\u0027.",
      "id": "FailureInjectorGPT(4)",
      "event": "PHalt",
      "state": "InjectFailures",
      "payload": "null",
      "clock": {
        "FailureInjectorGPT(4)": 9
      }
    }
  },
  {
    "type": "ExceptionThrown",
    "details": {
      "log": "FailureInjectorGPT(4) running action \u0027\u0027 in state \u0027InjectFailures\u0027 threw exception \u0027UnhandledEventException\u0027.",
      "id": "FailureInjectorGPT(4)",
      "state": "InjectFailures",
      "payload": "null",
      "action": "",
      "exception": "UnhandledEventException",
      "clock": {
        "FailureInjectorGPT(4)": 10
      }
    }
  },
  {
    "type": "ExceptionHandled",
    "details": {
      "log": "FailureInjectorGPT(4) running action \u0027\u0027 in state \u0027InjectFailures\u0027 chose to handle exception \u0027UnhandledEventException\u0027.",
      "id": "FailureInjectorGPT(4)",
      "state": "InjectFailures",
      "payload": "null",
      "action": "",
      "exception": "UnhandledEventException",
      "clock": {
        "FailureInjectorGPT(4)": 11
      }
    }
  },
  {
    "type": "Halt",
    "details": {
      "log": "FailureInjectorGPT(4) halted with 1 events in its inbox.",
      "id": "FailureInjectorGPT(4)",
      "payload": "null",
      "haltInboxSize": 1,
      "clock": {
        "FailureInjectorGPT(4)": 12
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "FlightController(3) enters state \u0027Init\u0027.",
      "id": "FlightController(3)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "FlightController(3)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "MavSDK(5) was created by FlightController(3).",
      "id": "MavSDK(5)",
      "creatorName": "FlightController(3)",
      "creatorType": "FlightController",
      "payload": "null",
      "clock": {
        "MavSDK(5)": 1
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "MavSDK(5) enters state \u0027Init\u0027.",
      "id": "MavSDK(5)",
      "state": "Init",
      "payload": "null",
      "isEntry": true,
      "clock": {
        "MavSDK(5)": 2
      }
    }
  },
  {
    "type": "CreateStateMachine",
    "details": {
      "log": "TelemetryMonitor(6) was created by MavSDK(5).",
      "id": "TelemetryMonitor(6)",
      "creatorName": "MavSDK(5)",
      "creatorType": "MavSDK",
      "payload": "null",
      "clock": {
        "TelemetryMonitor(6)": 1
      }
    }
  },
  {
    "type": "DequeueEvent",
    "details": {
      "log": "\u0027FlightController(3)\u0027 dequeued event \u0027eRespArm with payload (False)\u0027 in state \u0027Init\u0027.",
      "id": "FlightController(3)",
      "event": "eRespArm",
      "state": "Init",
      "payload": false,
      "clock": {
        "FlightController(3)": 3,
        "FailureInjectorGPT(4)": 6
      }
    }
  },
  {
    "type": "StateTransition",
    "details": {
      "log": "FlightController(3) exits state \u0027Init\u0027.",
      "id": "FlightController(3)",
      "state": "Init",
      "payload": "null",
      "isEntry": false,
      "clock": {
        "FlightController(3)": 4,
        "FailureInjectorGPT(4)": 6
      }
    }
  },
  {
    "type": "PopStateUnhandledEvent",
    "details": {
      "log": "FlightController(3) popped state Init due to unhandled event \u0027eRespArm\u0027.",
      "id": "FlightController(3)",
      "event": "eRespArm",
      "state": "Init",
      "payload": "null",
      "clock": {
        "FlightController(3)": 5,
        "FailureInjectorGPT(4)": 6
      }
    }
  },
  {
    "type": "ExceptionThrown",
    "details": {
      "log": "FlightController(3) running action \u0027\u0027 in state \u0027Init\u0027 threw exception \u0027UnhandledEventException\u0027.",
      "id": "FlightController(3)",
      "state": "Init",
      "payload": "null",
      "action": "",
      "exception": "UnhandledEventException",
      "clock": {
        "FlightController(3)": 6,
        "FailureInjectorGPT(4)": 6
      }
    }
  },
  {
    "type": "AssertionFailure",
    "details": {
      "log": "FlightController(3) received event \u0027PImplementation.eRespArm\u0027 that cannot be handled.",
      "error": "FlightController(3) received event \u0027PImplementation.eRespArm\u0027 that cannot be handled.",
      "payload": "null"
    }
  },
  {
    "type": "StrategyDescription",
    "details": {
      "log": "Found bug using \u0027random\u0027 strategy.",
      "payload": "null",
      "strategy": "random",
      "strategyDescription": "random[seed \u0027746509714\u0027]"
    }
  }
]